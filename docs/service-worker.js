"use strict";var precacheConfig=[["./index.html","8ffdb35c99b54af1e38e38e791519dd9"],["./static/js/main.15b937b5.js","6a5c3bc714201c481a7cda790a3feee0"],["./static/media/dc-arrow.a179d871.jpg","a179d8711d59015e5d3d53637ad9fce7"],["./static/media/dc-batman.8efedfa7.jpg","8efedfa7bf353070fb1dc56bc36a8bd3"],["./static/media/dc-black.5d203be2.jpg","5d203be297ee7aee6df388f48effc2d2"],["./static/media/dc-blue.871a00dd.jpg","871a00dda57a453a698369e1687db44e"],["./static/media/dc-flash.d22cd5d0.jpg","d22cd5d0cdbb8e6cb64ea844fd1082fa"],["./static/media/dc-green.dae0db0a.jpg","dae0db0a19c068035a119a4cf07bfd39"],["./static/media/dc-martian.9629381c.jpg","9629381c9ae8fe6a5c9ab23308cd76f0"],["./static/media/dc-robin.3b3b7dd1.jpg","3b3b7dd1a4716a9f8eec3c13c0611726"],["./static/media/dc-superman.ad88dd85.jpg","ad88dd859f1b6cb05d235edfdf7d2da9"],["./static/media/dc-wonder.b0117200.jpg","b01172005be3eba0ddbe50bd07d3ece8"],["./static/media/marvel-captain.71c5a519.jpg","71c5a519e43cab5350b5a5dbb45f4ece"],["./static/media/marvel-cyclops.017af60c.jpg","017af60c9d646181629f0887c02e8ef0"],["./static/media/marvel-daredevil.3d4c3df8.jpg","3d4c3df826dce8f0a85e8e49bd3fb204"],["./static/media/marvel-hawkeye.df41e28c.jpg","df41e28ce57042715584e972ea53e5a2"],["./static/media/marvel-hulk.8f5cd939.jpg","8f5cd9397468b7b508ffa33b00c5014e"],["./static/media/marvel-iron.8f307eef.jpg","8f307eef75cd45b3e7076ece1b368e5f"],["./static/media/marvel-silver.c055e4a0.jpg","c055e4a00bff140e8faf40eee0701eaa"],["./static/media/marvel-spider.9967f816.jpg","9967f816d7adb4c674f99d230e9472c7"],["./static/media/marvel-thor.9f1b74e5.jpg","9f1b74e51e318f14c533fdb3b03a7421"],["./static/media/marvel-wolverine.a1a41d9a.jpg","a1a41d9adf2f16f1220723a70ce20215"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var r="./index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});